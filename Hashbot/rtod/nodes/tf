#!/usr/bin/env python
# USAGE
import rospy
import tf
import geometry_msgs.msg
import math
from numpy import interp
from sensor_msgs.msg import LaserScan

left=0
right=0


def callback(msg):
    global left,right
    left=(min(msg.ranges[0:113]))
    right=(min(msg.ranges[607:719]))
    #print(data)


def obj2map(label, idx, startx, endx):
    global left,right
    val=(endx+startx)/2
    ad=interp(val,[10,390],[56,-56])
    ang=int(ad*2)
    if ad>=0:
	d=left
    else:
	d=right
    print(ad, d, ang)
    a=ad * math.pi / 180
    x=-d*math.cos(a)
    y=d*math.sin(a)
    br.sendTransform((x,y,0),tf.transformations.quaternion_from_euler(0, 0, 0),rospy.Time.now(),label,"base_link")
    
    


if __name__ == '__main__':
    rospy.init_node('fixed_tf2_broadcaster')
    sub = rospy.Subscriber('/scan', LaserScan, callback)
    rate = rospy.Rate(1)
    rospy.loginfo("Node has been started")
    print(sub)
    br = tf.TransformBroadcaster()


    while not rospy.is_shutdown():
        global left, right
        print(left,right)
        obj2map("sofa",18, 300,320)
        rate.sleep()
